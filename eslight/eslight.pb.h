/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9-dev at Fri Nov  3 14:05:30 2017. */

#ifndef PB_ESL_ESLIGHT_PB_H_INCLUDED
#define PB_ESL_ESLIGHT_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _esl_MsgType {
    esl_MsgType_RESERVED = 0,
    esl_MsgType_HELLO = 1,
    esl_MsgType_DISCOVER = 2,
    esl_MsgType_VALUE_UPDATE = 3
} esl_MsgType;
#define _esl_MsgType_MIN esl_MsgType_RESERVED
#define _esl_MsgType_MAX esl_MsgType_VALUE_UPDATE
#define _esl_MsgType_ARRAYSIZE ((esl_MsgType)(esl_MsgType_VALUE_UPDATE+1))

typedef enum _esl_Type {
    esl_Type_BOOL = 3,
    esl_Type_INT = 4,
    esl_Type_FLOAT = 5
} esl_Type;
#define _esl_Type_MIN esl_Type_BOOL
#define _esl_Type_MAX esl_Type_FLOAT
#define _esl_Type_ARRAYSIZE ((esl_Type)(esl_Type_FLOAT+1))

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(32) esl_Discover_serial_t;
typedef struct _esl_Discover {
    bool has_id;
    uint32_t id;
    bool has_serial;
    esl_Discover_serial_t serial;
/* @@protoc_insertion_point(struct:esl_Discover) */
} esl_Discover;

typedef PB_BYTES_ARRAY_T(16) esl_Hello_hwid_t;
typedef struct _esl_Hello {
    bool has_hwid;
    esl_Hello_hwid_t hwid;
    bool has_sensor_count;
    uint32_t sensor_count;
/* @@protoc_insertion_point(struct:esl_Hello) */
} esl_Hello;

typedef struct _esl_ValueUpdate {
    uint32_t id;
    bool has_bool_val;
    bool bool_val;
    bool has_int_val;
    int32_t int_val;
    bool has_float_val;
    float float_val;
/* @@protoc_insertion_point(struct:esl_ValueUpdate) */
} esl_ValueUpdate;

/* Default values for struct fields */

/* Initializer values for message structs */
#define esl_Hello_init_default                   {false, {0, {0}}, false, 0}
#define esl_Discover_init_default                {false, 0, false, {0, {0}}}
#define esl_ValueUpdate_init_default             {0, false, 0, false, 0, false, 0}
#define esl_Hello_init_zero                      {false, {0, {0}}, false, 0}
#define esl_Discover_init_zero                   {false, 0, false, {0, {0}}}
#define esl_ValueUpdate_init_zero                {0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define esl_Discover_id_tag                      1
#define esl_Discover_serial_tag                  2
#define esl_Hello_hwid_tag                       1
#define esl_Hello_sensor_count_tag               2
#define esl_ValueUpdate_id_tag                   1
#define esl_ValueUpdate_bool_val_tag             3
#define esl_ValueUpdate_int_val_tag              4
#define esl_ValueUpdate_float_val_tag            5

/* Struct field encoding specification for nanopb */
extern const pb_field_t esl_Hello_fields[3];
extern const pb_field_t esl_Discover_fields[3];
extern const pb_field_t esl_ValueUpdate_fields[5];

/* Maximum encoded size of messages (where known) */
#define esl_Hello_size                           24
#define esl_Discover_size                        40
#define esl_ValueUpdate_size                     24

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define ESLIGHT_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
